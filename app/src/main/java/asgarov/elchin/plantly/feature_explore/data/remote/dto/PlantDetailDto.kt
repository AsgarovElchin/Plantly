package asgarov.elchin.plantly.feature_explore.data.remote.dto

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass


@JsonClass(generateAdapter = true)
data class PlantDetailDto(
    @Json(name = "attracts") val attracts: List<Any>,
    @Json(name = "authority") val authority: Any?,
    @Json(name = "care_guides") val careGuides: String,
    @Json(name = "care_level") val careLevel: String,
    @Json(name = "common_name") val commonName: String,
    @Json(name = "cones") val cones: Boolean,
    @Json(name = "cuisine") val cuisine: Boolean,
    @Json(name = "cultivar") val cultivar: Any?,
    @Json(name = "cycle") val cycle: String,
    @Json(name = "default_image") val defaultImage: DefaultImageDto?,
    @Json(name = "description") val description: String,
    @Json(name = "dimensions") val dimensions: List<DimensionDto>,
    @Json(name = "drought_tolerant") val droughtTolerant: Boolean,
    @Json(name = "edible_fruit") val edibleFruit: Boolean,
    @Json(name = "edible_leaf") val edibleLeaf: Boolean,
    @Json(name = "family") val family: Any?,
    @Json(name = "flowering_season") val floweringSeason: Any?,
    @Json(name = "flowers") val flowers: Boolean,
    @Json(name = "fruits") val fruits: Boolean,
    @Json(name = "genus") val genus: String,
    @Json(name = "growth_rate") val growthRate: String,
    @Json(name = "hardiness") val hardiness: HardinessDto,
    @Json(name = "hardiness_location") val hardinessLocation: HardinessLocationDto,
    @Json(name = "harvest_season") val harvestSeason: Any?,
    @Json(name = "hybrid") val hybrid: Any?,
    @Json(name = "id") val id: Int,
    @Json(name = "indoor") val indoor: Boolean,
    @Json(name = "invasive") val invasive: Boolean,
    @Json(name = "leaf") val leaf: Boolean,
    @Json(name = "maintenance") val maintenance: Any?,
    @Json(name = "medicinal") val medicinal: Boolean,
    @Json(name = "origin") val origin: List<String>,
    @Json(name = "other_images") val otherImages: String,
    @Json(name = "other_name") val otherName: List<String>,
    @Json(name = "pest_susceptibility") val pestSusceptibility: List<Any>,
    @Json(name = "plant_anatomy") val plantAnatomy: List<Any>,
    @Json(name = "poisonous_to_humans") val poisonousToHumans: Boolean,
    @Json(name = "poisonous_to_pets") val poisonousToPets: Boolean,
    @Json(name = "propagation") val propagation: List<String>,
    @Json(name = "pruning_count") val pruningCount: PruningCountDto,
    @Json(name = "pruning_month") val pruningMonth: List<String>,
    @Json(name = "salt_tolerant") val saltTolerant: Boolean,
    @Json(name = "scientific_name") val scientificName: List<String>,
    @Json(name = "seeds") val seeds: Boolean,
    @Json(name = "soil") val soil: List<Any>,
    @Json(name = "species_epithet") val speciesEpithet: String,
    @Json(name = "subspecies") val subspecies: Any?,
    @Json(name = "sunlight") val sunlight: List<String>,
    @Json(name = "thorny") val thorny: Boolean,
    @Json(name = "tropical") val tropical: Boolean,
    @Json(name = "type") val type: String,
    @Json(name = "variety") val variety: Any?,
    @Json(name = "watering") val watering: String,
    @Json(name = "watering_general_benchmark") val wateringGeneralBenchmark: WateringGeneralBenchmarkDto,
    @Json(name = "xPlantSpacingRequirement") val xPlantSpacingRequirement: String,
    @Json(name = "xSunlightDuration") val xSunlightDuration: String,
    @Json(name = "xTemperatureTolence") val xTemperatureTolerance: String,
    @Json(name = "xWateringAvgVolumeRequirement") val xWateringAvgVolumeRequirement: String,
    @Json(name = "xWateringBasedTemperature") val xWateringBasedTemperature: String,
    @Json(name = "xWateringDepthRequirement") val xWateringDepthRequirement: String,
    @Json(name = "xWateringPeriod") val xWateringPeriod: String,
    @Json(name = "xWateringPhLevel") val xWateringPhLevel: String,
    @Json(name = "xWateringQuality") val xWateringQuality: String
)
